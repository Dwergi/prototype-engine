<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
	<Type Name="dd::String" Inheritable="true">
		<DisplayString>{m_buffer,s8}</DisplayString>
		<StringView>m_buffer,s8b</StringView>
	</Type>

	<Type Name="dd::SharedString" Inheritable="true">
		<DisplayString>{m_buffer,s}</DisplayString>
		<StringView>m_buffer,sb</StringView>
	</Type>

	<Type Name="dd::TypeInfo">
		<Intrinsic Name="IsBool" Expression="m_typeKind == dd::TypeKind::POD &amp;&amp; !strcmp(m_name.m_buffer,&quot;bool&quot;)"/>
		<Intrinsic Name="IsInt" Expression="m_typeKind == dd::TypeKind::POD &amp;&amp; (strstr(m_name.m_buffer,&quot;int&quot;) || strstr(m_name.m_buffer,&quot;uint&quot;))"/>
		<Intrinsic Name="IsFloat" Expression="m_typeKind == dd::TypeKind::POD &amp;&amp; strstr(m_name.m_buffer,&quot;float&quot;)"/>
		<Intrinsic Name="IsDouble" Expression="m_typeKind == dd::TypeKind::POD &amp;&amp; strstr(m_name.m_buffer,&quot;double&quot;)"/>
		<Intrinsic Name="IsString" Expression="strstr(m_name.m_buffer,&quot;String&quot;) &amp;&amp; strstr(m_namespace.m_buffer,&quot;dd&quot;)"/>
		<Intrinsic Name="HasNamespace" Expression="m_namespace.m_length > 0"/>
		
		<DisplayString Condition="HasNamespace()">{m_namespace.m_buffer,s8b}::{m_name.m_buffer,s8b}</DisplayString>
		<DisplayString>{m_name.m_buffer,s8b}</DisplayString>
		<Expand>
			<Item Name="[namespace]" Condition="m_namespace.m_length > 0">m_namespace</Item>
			<Item Name="[name]">m_name</Item>
			<Item Name="[size]">m_size</Item>
			<Item Name="[members]">m_members</Item>
			<Item Name="[methods]">m_methods</Item>
		</Expand>
	</Type>

	<Type Name="dd::Variable">
		<DisplayString Condition="m_typeInfo == 0">{{empty}}</DisplayString>
		<DisplayString Condition="m_typeInfo->IsInt() &amp;&amp; m_typeInfo->m_size == 1">
			{{{*m_typeInfo}={*(int8*) m_data}}}
		</DisplayString>
		<DisplayString Condition="m_typeInfo->IsInt() &amp;&amp; m_typeInfo->m_size == 2">
			{{{*m_typeInfo}={*(int16*) m_data}}}
		</DisplayString>
		<DisplayString Condition="m_typeInfo->IsInt() &amp;&amp; m_typeInfo->m_size == 4">
			{{{*m_typeInfo}={*(int32*) m_data}}}
		</DisplayString>
		<DisplayString Condition="m_typeInfo->IsInt() &amp;&amp; m_typeInfo->m_size == 8">
			{{{*m_typeInfo}={*(int64*) m_data}}}
		</DisplayString>
		<DisplayString Condition="m_typeInfo->IsString()">
			{{{*m_typeInfo}={*(dd::String*) m_data}}}
		</DisplayString>
		<DisplayString Condition="m_typeInfo->IsFloat()">
			{{{*m_typeInfo}={*(float*) m_data}}}
		</DisplayString>
		<DisplayString Condition="m_typeInfo->IsDouble()">
			{{{*m_typeInfo}={*(double*) m_data}}}
		</DisplayString>
		<DisplayString Condition="m_typeInfo->IsBool()">
			{{{*m_typeInfo}={*(bool*) m_data}}}
		</DisplayString>
		<DisplayString>{{{*m_typeInfo}}}</DisplayString> 
		
		<Expand>
			<Item Name="[type]">*m_typeInfo</Item>
			<Item Name="[value]" Condition="m_typeInfo->IsInt() &amp;&amp; m_typeInfo->m_size == 1">
				*(int8*) m_data
			</Item>
			<Item Name="[value]" Condition="m_typeInfo->IsInt() &amp;&amp; m_typeInfo->m_size == 2">
				*(int16*) m_data
			</Item>
			<Item Name="[value]" Condition="m_typeInfo->IsInt() &amp;&amp; m_typeInfo->m_size == 4">
				*(int32*) m_data
			</Item>
			<Item Name="[value]" Condition="m_typeInfo->IsInt() &amp;&amp; m_typeInfo->m_size == 8">
				*(int64*) m_data
			</Item>
			<Item Name="[value]" Condition="m_typeInfo->IsFloat()">*(float*) m_data</Item>
			<Item Name="[value]" Condition="m_typeInfo->IsDouble()">*(double*) m_data</Item>
			<Item Name="[value]" Condition="m_typeInfo->IsBool()">*(bool*) m_data</Item>
			<Item Name="[value]" Condition="m_typeInfo->IsString()">*(dd::String*) m_data,s</Item>
			<Item Name="[ptr]">m_data</Item>
			<Synthetic Name="[Copy to Watch]">
				<DisplayString Condition="m_typeInfo->HasNamespace()">
					*({m_typeInfo->m_namespace.m_buffer,sb}::{m_typeInfo->m_name.m_buffer,sb}*) {m_data}
				</DisplayString>
				<DisplayString>
					*({m_typeInfo->m_name.m_buffer,sb}*) {m_data}
				</DisplayString>
			</Synthetic>
		</Expand>
	</Type>

	<Type Name="dd::Member">
		<DisplayString Condition="m_typeInfo == 0">{{empty}}</DisplayString>
		<DisplayString Condition="m_parent != 0">{*m_parent}::{m_name.m_buffer,sb} ({*m_typeInfo})</DisplayString>
		<DisplayString>{m_name.m_buffer,sb} ({*m_typeInfo})</DisplayString>
		<Expand>
			<Item Name="[type]">*m_typeInfo</Item>
			<Item Name="[parent]">m_parent</Item>
			<Item Name="[offset]">m_offset</Item>
		</Expand>
	</Type>

	<Type Name="dd::Property">
		<DisplayString>{m_name,sb}: {m_variable}</DisplayString>

		<Expand>
			<Item Name="[name]">m_name</Item>
			<Item Name="[variable]">m_variable</Item>
			<Item Name="[undo]">m_undo</Item>

			<Synthetic Name="[Copy to Watch]">
				<DisplayString Condition="m_variable.m_typeInfo->HasNamespace()">
					*({m_variable.m_typeInfo->m_namespace.m_buffer,sb}::{m_variable.m_typeInfo->m_name.m_buffer,sb}*) {m_variable.m_data}
				</DisplayString>
				<DisplayString>
					*({m_variable.m_typeInfo->m_name.m_buffer,sb}*) {m_variable.m_data}
				</DisplayString>
			</Synthetic>
		</Expand>
	</Type>

	<Type Name="dd::Variant&lt;*&gt;">
		<DisplayString>{m_variable}</DisplayString>
	</Type>

	<Type Name="dd::Vector&lt;*&gt;">
		<DisplayString>{"$T1",sb} [{m_size}/{m_capacity}]</DisplayString>
		<Expand>
			<Item Name="[size]">m_size</Item>
			<Item Name="[capacity]">m_capacity</Item>
			<ArrayItems>
				<Size>m_size</Size>
				<ValuePointer>m_data</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>

	<Type Name="dd::Array&lt;*&gt;">
		<DisplayString>{"$T1",sb} [{m_size}/{m_data.m_count}]</DisplayString>
		<Expand>
			<Item Name="[size]">m_size</Item>
			<Item Name="[capacity]">m_data.m_count</Item>
			<ArrayItems>
				<Size>m_size</Size>
				<ValuePointer>m_data.m_ptr</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>

	<Type Name="dd::ConstBuffer&lt;*&gt;">
		<DisplayString>{"$T1",sb} [{m_count}]</DisplayString>
		<Expand>
			<Item Name="[count]">m_count</Item>
			<ArrayItems>
				<Size>m_count</Size>
				<ValuePointer>m_ptr</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>

	<Type Name="dd::Buffer&lt;*&gt;">
		<DisplayString>{"$T1",sb} [{m_count}]</DisplayString>
		<Expand>
			<Item Name="[count]">m_count</Item>
			<ArrayItems>
				<Size>m_count</Size>
				<ValuePointer>m_ptr</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>

	<Type Name="ddr::VAO">
		<DisplayString>{m_name,sb} [{m_id}]</DisplayString>
	</Type>

	<Type Name="ddr::VBO">
		<DisplayString>{m_name,sb} [{m_id}]</DisplayString>
	</Type>

	<Type Name="ddr::VAO::BufferBinding">
		<DisplayString Condition="VBO == 0">{{invalid}}</DisplayString>
		<DisplayString Condition="VBO->m_dataSize == 0">{VBO->m_name,sb} [{VBO->m_id}] (empty)</DisplayString>
		<DisplayString>{VBO->m_name,sb} [{VBO->m_id}] ({(VBO->m_dataSize - Offset) / Stride} elements)</DisplayString>
	</Type>
	
</AutoVisualizer>