#version 330 core

layout(triangles) in;
layout(triangle_strip, max_vertices = 3) out;

in struct VertexData
{
	vec3 Position;
	vec4 Colour;
}
Vertex[];

flat in vec3 FlatPosition[];

out struct FragmentData
{
	vec3 Position;
	vec4 Colour;
}
Fragment;

flat out vec3 FragmentNormal;

void main()
{
	vec3 a = FlatPosition[1] - FlatPosition[0];
	vec3 b = FlatPosition[2] - FlatPosition[0];

	vec3 normal = normalize( cross( a, b ) );

	gl_Position = gl_in[0].gl_Position;
	Fragment.Position = Vertex[0].Position;
	Fragment.Colour = Vertex[0].Colour;
	FragmentNormal = normal;
	EmitVertex();

	gl_Position = gl_in[1].gl_Position;
	Fragment.Position = Vertex[1].Position;
	Fragment.Colour = Vertex[1].Colour;
	FragmentNormal = normal;
	EmitVertex();

	gl_Position = gl_in[2].gl_Position;
	Fragment.Position = Vertex[2].Position;
	Fragment.Colour = Vertex[2].Colour;
	FragmentNormal = normal;
	EmitVertex();

	EndPrimitive();
}